//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18046
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace footbal.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://microsoft.com/webservices/", ConfigurationName="ServiceReference2.ASPFAQsSoap")]
    public interface ASPFAQsSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://microsoft.com/webservices/GetCategories", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetCategories(System.AsyncCallback callback, object asyncState);
        
        footbal.ServiceReference2.ArrayOfXElement EndGetCategories(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://microsoft.com/webservices/GetFAQsInCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetFAQsInCategory(int catID, System.AsyncCallback callback, object asyncState);
        
        footbal.ServiceReference2.ArrayOfXElement EndGetFAQsInCategory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://microsoft.com/webservices/GetFAQ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetFAQ(int FAQID, System.AsyncCallback callback, object asyncState);
        
        footbal.ServiceReference2.ArrayOfXElement EndGetFAQ(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ASPFAQsSoapChannel : footbal.ServiceReference2.ASPFAQsSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public footbal.ServiceReference2.ArrayOfXElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((footbal.ServiceReference2.ArrayOfXElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFAQsInCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFAQsInCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public footbal.ServiceReference2.ArrayOfXElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((footbal.ServiceReference2.ArrayOfXElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFAQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFAQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public footbal.ServiceReference2.ArrayOfXElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((footbal.ServiceReference2.ArrayOfXElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ASPFAQsSoapClient : System.ServiceModel.ClientBase<footbal.ServiceReference2.ASPFAQsSoap>, footbal.ServiceReference2.ASPFAQsSoap {
        
        private BeginOperationDelegate onBeginGetCategoriesDelegate;
        
        private EndOperationDelegate onEndGetCategoriesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCategoriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFAQsInCategoryDelegate;
        
        private EndOperationDelegate onEndGetFAQsInCategoryDelegate;
        
        private System.Threading.SendOrPostCallback onGetFAQsInCategoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFAQDelegate;
        
        private EndOperationDelegate onEndGetFAQDelegate;
        
        private System.Threading.SendOrPostCallback onGetFAQCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ASPFAQsSoapClient() {
        }
        
        public ASPFAQsSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ASPFAQsSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ASPFAQsSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ASPFAQsSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetCategoriesCompletedEventArgs> GetCategoriesCompleted;
        
        public event System.EventHandler<GetFAQsInCategoryCompletedEventArgs> GetFAQsInCategoryCompleted;
        
        public event System.EventHandler<GetFAQCompletedEventArgs> GetFAQCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult footbal.ServiceReference2.ASPFAQsSoap.BeginGetCategories(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCategories(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        footbal.ServiceReference2.ArrayOfXElement footbal.ServiceReference2.ASPFAQsSoap.EndGetCategories(System.IAsyncResult result) {
            return base.Channel.EndGetCategories(result);
        }
        
        private System.IAsyncResult OnBeginGetCategories(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((footbal.ServiceReference2.ASPFAQsSoap)(this)).BeginGetCategories(callback, asyncState);
        }
        
        private object[] OnEndGetCategories(System.IAsyncResult result) {
            footbal.ServiceReference2.ArrayOfXElement retVal = ((footbal.ServiceReference2.ASPFAQsSoap)(this)).EndGetCategories(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCategoriesCompleted(object state) {
            if ((this.GetCategoriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCategoriesCompleted(this, new GetCategoriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCategoriesAsync() {
            this.GetCategoriesAsync(null);
        }
        
        public void GetCategoriesAsync(object userState) {
            if ((this.onBeginGetCategoriesDelegate == null)) {
                this.onBeginGetCategoriesDelegate = new BeginOperationDelegate(this.OnBeginGetCategories);
            }
            if ((this.onEndGetCategoriesDelegate == null)) {
                this.onEndGetCategoriesDelegate = new EndOperationDelegate(this.OnEndGetCategories);
            }
            if ((this.onGetCategoriesCompletedDelegate == null)) {
                this.onGetCategoriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCategoriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCategoriesDelegate, null, this.onEndGetCategoriesDelegate, this.onGetCategoriesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult footbal.ServiceReference2.ASPFAQsSoap.BeginGetFAQsInCategory(int catID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFAQsInCategory(catID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        footbal.ServiceReference2.ArrayOfXElement footbal.ServiceReference2.ASPFAQsSoap.EndGetFAQsInCategory(System.IAsyncResult result) {
            return base.Channel.EndGetFAQsInCategory(result);
        }
        
        private System.IAsyncResult OnBeginGetFAQsInCategory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int catID = ((int)(inValues[0]));
            return ((footbal.ServiceReference2.ASPFAQsSoap)(this)).BeginGetFAQsInCategory(catID, callback, asyncState);
        }
        
        private object[] OnEndGetFAQsInCategory(System.IAsyncResult result) {
            footbal.ServiceReference2.ArrayOfXElement retVal = ((footbal.ServiceReference2.ASPFAQsSoap)(this)).EndGetFAQsInCategory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFAQsInCategoryCompleted(object state) {
            if ((this.GetFAQsInCategoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFAQsInCategoryCompleted(this, new GetFAQsInCategoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFAQsInCategoryAsync(int catID) {
            this.GetFAQsInCategoryAsync(catID, null);
        }
        
        public void GetFAQsInCategoryAsync(int catID, object userState) {
            if ((this.onBeginGetFAQsInCategoryDelegate == null)) {
                this.onBeginGetFAQsInCategoryDelegate = new BeginOperationDelegate(this.OnBeginGetFAQsInCategory);
            }
            if ((this.onEndGetFAQsInCategoryDelegate == null)) {
                this.onEndGetFAQsInCategoryDelegate = new EndOperationDelegate(this.OnEndGetFAQsInCategory);
            }
            if ((this.onGetFAQsInCategoryCompletedDelegate == null)) {
                this.onGetFAQsInCategoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFAQsInCategoryCompleted);
            }
            base.InvokeAsync(this.onBeginGetFAQsInCategoryDelegate, new object[] {
                        catID}, this.onEndGetFAQsInCategoryDelegate, this.onGetFAQsInCategoryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult footbal.ServiceReference2.ASPFAQsSoap.BeginGetFAQ(int FAQID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFAQ(FAQID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        footbal.ServiceReference2.ArrayOfXElement footbal.ServiceReference2.ASPFAQsSoap.EndGetFAQ(System.IAsyncResult result) {
            return base.Channel.EndGetFAQ(result);
        }
        
        private System.IAsyncResult OnBeginGetFAQ(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int FAQID = ((int)(inValues[0]));
            return ((footbal.ServiceReference2.ASPFAQsSoap)(this)).BeginGetFAQ(FAQID, callback, asyncState);
        }
        
        private object[] OnEndGetFAQ(System.IAsyncResult result) {
            footbal.ServiceReference2.ArrayOfXElement retVal = ((footbal.ServiceReference2.ASPFAQsSoap)(this)).EndGetFAQ(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFAQCompleted(object state) {
            if ((this.GetFAQCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFAQCompleted(this, new GetFAQCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFAQAsync(int FAQID) {
            this.GetFAQAsync(FAQID, null);
        }
        
        public void GetFAQAsync(int FAQID, object userState) {
            if ((this.onBeginGetFAQDelegate == null)) {
                this.onBeginGetFAQDelegate = new BeginOperationDelegate(this.OnBeginGetFAQ);
            }
            if ((this.onEndGetFAQDelegate == null)) {
                this.onEndGetFAQDelegate = new EndOperationDelegate(this.OnEndGetFAQ);
            }
            if ((this.onGetFAQCompletedDelegate == null)) {
                this.onGetFAQCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFAQCompleted);
            }
            base.InvokeAsync(this.onBeginGetFAQDelegate, new object[] {
                        FAQID}, this.onEndGetFAQDelegate, this.onGetFAQCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override footbal.ServiceReference2.ASPFAQsSoap CreateChannel() {
            return new ASPFAQsSoapClientChannel(this);
        }
        
        private class ASPFAQsSoapClientChannel : ChannelBase<footbal.ServiceReference2.ASPFAQsSoap>, footbal.ServiceReference2.ASPFAQsSoap {
            
            public ASPFAQsSoapClientChannel(System.ServiceModel.ClientBase<footbal.ServiceReference2.ASPFAQsSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetCategories(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCategories", _args, callback, asyncState);
                return _result;
            }
            
            public footbal.ServiceReference2.ArrayOfXElement EndGetCategories(System.IAsyncResult result) {
                object[] _args = new object[0];
                footbal.ServiceReference2.ArrayOfXElement _result = ((footbal.ServiceReference2.ArrayOfXElement)(base.EndInvoke("GetCategories", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFAQsInCategory(int catID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = catID;
                System.IAsyncResult _result = base.BeginInvoke("GetFAQsInCategory", _args, callback, asyncState);
                return _result;
            }
            
            public footbal.ServiceReference2.ArrayOfXElement EndGetFAQsInCategory(System.IAsyncResult result) {
                object[] _args = new object[0];
                footbal.ServiceReference2.ArrayOfXElement _result = ((footbal.ServiceReference2.ArrayOfXElement)(base.EndInvoke("GetFAQsInCategory", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFAQ(int FAQID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = FAQID;
                System.IAsyncResult _result = base.BeginInvoke("GetFAQ", _args, callback, asyncState);
                return _result;
            }
            
            public footbal.ServiceReference2.ArrayOfXElement EndGetFAQ(System.IAsyncResult result) {
                object[] _args = new object[0];
                footbal.ServiceReference2.ArrayOfXElement _result = ((footbal.ServiceReference2.ArrayOfXElement)(base.EndInvoke("GetFAQ", _args, result)));
                return _result;
            }
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Silverlight.Phone.ServiceReference", "3.7.0.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement() {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes {
            get {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema() {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer) {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            ) {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader) {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            ) {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element)) {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else {
                    reader.Skip();
                }
            }
        }
    }
}
